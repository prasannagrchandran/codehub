{"version":3,"sources":["components/GlobalState.js","components/Starter.js","components/Snippet.js","components/ProfileMenu.js","components/ProfileSetting.js","components/AddSnippet.js","components/Sidenav.js","components/Login.js","components/MasterPage.js","components/Signup.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","React","createContext","CompAddedContext","GlobalState","children","useState","isLoggedin","id","uname","password","user_img","user","setUser","newPost","setNewpost","Provider","value","Starter","props","Typography","align","variant","SnippetCard","snippets","setSnippets","loaded","setLoad","useEffect","url","post","category","name","axios","get","then","response","datas","JSON","parse","data","undefined","NewDataSet","Table","length","temp","push","catch","error","console","log","copyToclip","event","target","select","document","execCommand","title","Container","map","snippet","key","className","data-aos","data-aos-duration","description","Tooltip","arrow","placement","onClick","TextareaAutosize","code","readOnly","Rating","defaultValue","precision","Box","mt","p","boxShadow","Skeleton","animation","width","height","ProfileMenu","useContext","anchorEl","setAnchorEl","handleClick","currentTarget","handleClose","Avatar","alt","src","charAt","toUpperCase","keepMounted","open","Boolean","onClose","Divider","MenuItem","style","paddingRight","ProfileSetting","severity","label","active","alert","setAlert","classes","makeStyles","theme","root","flexWrap","margin","marginTop","spacing","withoutLabel","textField","marginBottom","useStyles","showPassword","userprofile","values","setValues","handleChange","prop","file","files","reader","FileReader","onloadend","result","readAsDataURL","data-aos-anchor","data-aos-offset","TextField","clsx","required","onChange","FormControl","InputLabel","htmlFor","OutlinedInput","type","endAdornment","InputAdornment","position","IconButton","aria-label","onMouseDown","preventDefault","edge","labelWidth","Button","color","button","put","headers","Alert","marginRight","actionsContainer","resetContainer","padding","AddSnippet","componentName","setComponentName","setTitle","setDescription","setSnippet","setCategory","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","Card","CardContent","Grid","container","alignItems","item","e","RadioGroup","FormControlLabel","control","Radio","xs","fullWidth","multiline","Hidden","only","Stepper","orientation","index","Step","StepLabel","StepContent","step","getStepContent","disabled","Paper","square","elevation","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","justifyContent","content","flexGrow","contentShift","ScrollTop","window","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","in","anchor","ownerDocument","querySelector","scrollIntoView","behavior","block","role","PersistentDrawerLeft","useTheme","setOpen","expanded","setExpanded","selected","setSelected","postname","setPostname","components","setComponents","methods","setMethods","currentBodyComponent","setBody","handleToggle","nodeIds","handleSelect","openComponent","innerText","openPost","component","tempcomponents","tempMethods","row","includes","method","sort","CssBaseline","AppBar","Toolbar","noWrap","flex","paddingTop","fontSize","Badge","anchorOrigin","vertical","horizontal","badgeContent","showZero","to","Drawer","paper","direction","List","ListItem","TreeView","defaultCollapseIcon","defaultExpandIcon","onNodeToggle","onNodeSelect","TreeItem","nodeId","Fab","size","Login","md","username","MasterPage","Signup","autoComplete","createMuiTheme","palette","contrastThreshold","tonalOffset","Error","location","pathname","App","ThemeProvider","basename","exact","strict","path","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ff086b5f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport const UserContext = React.createContext('');\r\nexport const CompAddedContext = React.createContext('component');\r\n\r\nconst GlobalState = ({ children }) => {\r\n    const [user, setUser] = useState({ isLoggedin:false,id:'',uname: '', password: '', user_img: '' })\r\n    const [newPost, setNewpost] = useState('')\r\n\r\n    return (\r\n        <>\r\n            <CompAddedContext.Provider value={[newPost, setNewpost]}>\r\n                <UserContext.Provider value={[user, setUser]}>\r\n                    {children}\r\n                </UserContext.Provider>\r\n            </CompAddedContext.Provider>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GlobalState;","import React from 'react';\r\nimport {Typography,Grid} from '@material-ui/core'\r\n\r\nexport default function Starter(props) {\r\n    return (\r\n        <div>\r\n            <Typography align=\"center\" variant=\"h3\">Organize, Share, Collaborate.</Typography> \r\n            <br />\r\n            <br />\r\n<Typography align=\"center\" variant=\"h6\"> Save and organize your code snippets in the cloud.\r\nShare and collaborate with your team members.</Typography>\r\n<br />\r\n<Typography align=\"center\" variant=\"h5\" >Organize your code</Typography>\r\n<Typography align=\"center\" variant=\"h6\">Group similar code snippets in lists and collections and keep everything organized. Nice and tidy!\r\n    </Typography>\r\n    <br />\r\n    {/* <Grid container>\r\n        <Grid item md={6}>\r\n        <h1>Wanna use !</h1>\r\n            <p>Check component snippets.wannit..! just click it.... :)</p>\r\n        </Grid>\r\n        <Grid item md={6}>\r\n        <h1>Wanna Contribute !</h1>\r\n            <p>Click Post...And share your junk to the world of junkies :)</p>\r\n        </Grid>\r\n    </Grid>\r\n             */}\r\n          \r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../App.css';\r\nimport Container from '@material-ui/core/Container';\r\nimport {Skeleton,Rating} from '@material-ui/lab';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport {Tooltip} from '@material-ui/core';\r\nimport Starter from './Starter';\r\n\r\n\r\nexport default function SnippetCard(props) {\r\n    const [snippets, setSnippets] = useState([])\r\n    const [loaded, setLoad] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        var url = 'https://ssautomation.accenture.com/reactapi/api/codehub?category=' + props.post.category + '&name=' + props.post.name;\r\n        axios.get(url)\r\n            .then(response => {\r\n                const datas = JSON.parse(response.data)\r\n\r\n                if (datas.NewDataSet.Table.length === undefined) {\r\n\r\n                    let temp = []\r\n                    temp.push(datas.NewDataSet.Table);\r\n                    setSnippets(temp)\r\n                }\r\n                else {\r\n                    setSnippets(datas.NewDataSet.Table)\r\n                }\r\n                setLoad(true)\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }, [props.post]);\r\n\r\n    const copyToclip = (event) => {\r\n\r\n        const copyText = event.target;\r\n        copyText.select()\r\n        document.execCommand(\"copy\")\r\n        event.target.title = \"Copied\";\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Container>\r\n\r\n                {\r\n                    !props.post.name ? <Starter /> :\r\n                        loaded ? (\r\n                            snippets.map(snippet =>\r\n\r\n                                <div key={snippet.id} className=\"post\" data-aos=\"fade-up-right\"\r\n                                data-aos-duration=\"500\">\r\n                                    <h3>{snippet.title}</h3>\r\n                                    <p>{snippet.description}</p>\r\n                                    <br />\r\n                                    <Tooltip title=\"Copy to Clipboard\" arrow={true} placement=\"top-end\" onClick={copyToclip}>\r\n                                        <TextareaAutosize className=\"snippet-card\" value={snippet.code} readOnly>\r\n                                            <code>{snippet.code}</code>\r\n                                        </TextareaAutosize>\r\n                                    </Tooltip>\r\n                                    <Rating name=\"half-rating\" defaultValue={2.5} precision={0.5} />\r\n                                </div>)) : (<Box mt={5} p={10} boxShadow={6}>\r\n                                    <Skeleton variant=\"rect\" animation=\"wave\" width={150} />\r\n                                    <br />\r\n                                    <Skeleton variant=\"rect\" animation=\"wave\" height={30} />\r\n                                    <br />\r\n                                    <Skeleton variant=\"rect\" animation=\"wave\" height={220} />\r\n                                </Box>)\r\n\r\n\r\n                }\r\n            </Container>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React,{useContext} from 'react';\r\nimport '../App.css'\r\nimport {Menu,MenuItem,Avatar, Divider} from '@material-ui/core';\r\n\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nimport { UserContext } from './GlobalState';\r\n\r\n\r\n\r\nexport default function ProfileMenu({onClick}) {\r\n  const [user,setUser]=useContext(UserContext)\r\n  \r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const logout=()=>{\r\n    setUser('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {user.user_img?<Avatar alt=\"Remy Sharp\" src={user.user_img} onClick={handleClick} />:<Avatar onClick={handleClick}>{user.uname.charAt(0).toUpperCase()}</Avatar>}\r\n      \r\n      \r\n      \r\n      \r\n      \r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <center><Avatar className=\"mb-1\" src={user.user_img}></Avatar></center>\r\n        \r\n        <Divider />\r\n        <MenuItem onClick={handleClose}><PersonIcon style={{paddingRight:5}} /> {user.uname}</MenuItem> \r\n        <MenuItem onClick={onClick}><SettingsIcon style={{paddingRight:5}} /> Account Settings</MenuItem> \r\n        <MenuItem onClick={logout}><ExitToAppIcon style={{paddingRight:5}} /> Logout</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { UserContext } from './GlobalState';\r\nimport { Avatar } from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\nimport clsx from 'clsx';\r\nimport { Grid, TextField,Tooltip } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nexport default function ProfileSetting(props) {\r\n    const [user, setUser] = useContext(UserContext)\r\n    const [alert, setAlert] = useState({ severity: '', label: '', active: false })\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n\r\n            flexWrap: 'wrap',\r\n        },\r\n        margin: {\r\n            marginTop: theme.spacing(1),\r\n        },\r\n        withoutLabel: {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n        textField: {\r\n            width: '80%',\r\n        },\r\n        alert: {\r\n            width: '75%',\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1)\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        name: user.uname,\r\n        password: user.password,\r\n        showPassword: false,\r\n        userprofile: user.user_img\r\n    });\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        if(prop==='userprofile'){\r\n            var file = event.target.files[0];\r\n            var reader = new FileReader();\r\n    \r\n            reader.onloadend = function () {                \r\n                setValues({ ...values, [prop]: reader.result });\r\n               \r\n            }\r\n            reader.readAsDataURL(file);\r\n    \r\n        }\r\n        else{\r\n            setValues({ ...values, [prop]: event.target.value });\r\n        }\r\n        \r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n\r\n\r\n    const updateProfile = () => {\r\n        debugger;\r\n        const data = {\r\n            uname: values.name,\r\n            password: values.password,\r\n            user_img: values.userprofile,\r\n\r\n        }\r\n        const options = {\r\n            headers: {                \r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        let url=`https://ssautomation.accenture.com/reactapi/api/login/${user.id}`\r\n        axios.put(url, data, options)\r\n            .then((response) => {   \r\n                setUser({isLoggedin:true,id:user.id,uname:values.name,password:values.password,user_img:values.userprofile})                    \r\n                \r\n                setAlert({ severity: 'success', label: 'Profile updated...', active: true })\r\n                                    \r\n            })\r\n            .catch(error => {                \r\n                setAlert({ severity: 'error', label: 'Cant update bro... :)', active: true })\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div data-aos=\"fade-left\"\r\n        data-aos-anchor=\"#example-anchor\"\r\n        data-aos-offset=\"500\"\r\n        data-aos-duration=\"500\">            \r\n            <h1>Account Settings</h1>\r\n            <Tooltip title=\"change Profile\">\r\n                \r\n            <Avatar src={user.user_img} ></Avatar>\r\n            </Tooltip>\r\n<br /><br />\r\n            <TextField className={clsx(classes.marginTop, classes.textField)}\r\n                id=\"outlined-required\"\r\n                label=\"User Name\"\r\n                defaultValue={user.uname}\r\n                variant=\"outlined\"\r\n                required\r\n                onChange={handleChange('name')}\r\n            />\r\n            <br />\r\n            <br />\r\n            <FormControl className={clsx(classes.marginTop, classes.textField)} variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                <OutlinedInput\r\n                    id=\"outlined-adornment-password\"\r\n                    type={values.showPassword ? 'text' : 'password'}\r\n\r\n                    defaultValue={user.password}\r\n                    onChange={handleChange('password')}\r\n                    endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                                aria-label=\"toggle password visibility\"\r\n                                onClick={handleClickShowPassword}\r\n                                onMouseDown={handleMouseDownPassword}\r\n                                edge=\"end\"\r\n                            >\r\n                                {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                />\r\n            </FormControl>\r\n            <br />\r\n            <br />\r\n            <input key=\"userimg\" type=\"file\" onChange={handleChange('userprofile')} />\r\n            <br />\r\n            <br />\r\n\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={updateProfile}\r\n            >Update Profile</Button>\r\n\r\n{alert?<><Alert className={clsx(classes.alert)} severity={alert.severity}>{alert.label}</Alert></>:<></>}\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport '../App.css';\r\nimport axios from 'axios';\r\nimport {Hidden} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CompAddedContext, UserContext } from './GlobalState'\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\n\r\nfunction getSteps() {\r\n  return ['Component Name', 'Post Title', 'Category', 'Description', 'Code'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return `Enter Component Name`;\r\n    case 1:\r\n      return 'Give the suitable title for your post';\r\n    case 2:\r\n      return `Choose your component category`;\r\n    case 3:\r\n      return `Describe your Post buddy`;\r\n    case 4:\r\n      return `Enter your Junk Here`;\r\n\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction AddSnippet() {\r\n  const classes = useStyles();\r\n  const [componentName, setComponentName] = useState('')\r\n  const [title, setTitle] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const [snippet, setSnippet] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [newPost, setNewpost] = useContext(CompAddedContext)\r\n  const steps = getSteps()\r\n\r\n\r\n\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n\r\n  const getComponent = (e) => {\r\n\r\n    setComponentName(e.target.value)\r\n\r\n  }\r\n  const handleRadioChange = (event) => {\r\n    setCategory(event.target.value);\r\n\r\n  };\r\n  const getTitle = (e) => {\r\n    setTitle(e.target.value)\r\n  }\r\n  const getDescription = (e) => {\r\n    setDescription(e.target.value)\r\n  }\r\n  const getSnippet = (e) => {\r\n    setSnippet(e.target.value)\r\n  }\r\n\r\n\r\n  const addSnippet = () => {\r\n    if (componentName !== \"\" && title !== \"\" && description !== \"\" && snippet !== \"\") {\r\n\r\n\r\n      const data = {\r\n        name: componentName,\r\n        category: category,\r\n        title: title,\r\n        description: description,\r\n        code: snippet\r\n      }\r\n      const options = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n\r\n      axios.post('https://ssautomation.accenture.com/reactapi/api/codehub', data, options)\r\n        .then((response) => {\r\n          alert(\"posted successfully\");\r\n          setNewpost(componentName)\r\n        })\r\n        .catch(error => {\r\n          alert(\"cant post bro\");\r\n        })\r\n    }\r\n    else {\r\n      alert('fill all');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-snippet\" data-aos=\"fade-up-left\"\r\n    data-aos-anchor=\"#example-anchor\"\r\n    data-aos-offset=\"500\"\r\n    data-aos-duration=\"500\">\r\n      \r\n\r\n      \r\n        <Card className={classes.root} variant=\"outlined\">\r\n          <CardContent>\r\n            <div className={classes.margin}>\r\n              <Grid container spacing={1} alignItems=\"flex-end\">\r\n                {/* <Grid item>\r\n            <AccountCircle />\r\n          </Grid> */}\r\n                <Grid item>\r\n                  <TextField id=\"input-with-icon-grid\" label=\"Component Name\" onChange={getComponent} required />\r\n\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField id=\"input-with-icon-grid\" label=\"Post Title\" onChange={getTitle} required />\r\n                </Grid>\r\n                <Grid item>\r\n                  <RadioGroup aria-label=\"quiz\" name=\"quiz\" color=\"secondary\" value={category} onChange={handleRadioChange}>\r\n                    <FormControlLabel value=\"Frontend\" control={<Radio />} label=\"Frontend\" />\r\n                    <FormControlLabel value=\"Backend\" control={<Radio />} label=\"Backend\" />\r\n                  </RadioGroup>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n\r\n            {/* <input type=\"text\" placeholder=\"Component Name\" onChange={getComponent} /> */}\r\n            {/* <input type=\"text\" placeholder=\"Post Title\" onChange={getTitle} /> */}\r\n            <Grid item xs={6} >\r\n              <TextField id=\"input-with-icon-grid\" fullWidth label=\"Description\" multiline onChange={getDescription} required />\r\n            </Grid>\r\n            <Grid item xs={6} >\r\n              <TextField id=\"input-with-icon-grid\" fullWidth label=\"Code\" multiline onChange={getSnippet} required />\r\n            </Grid>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={addSnippet}\r\n            >\r\n              AddSnippet\r\n      </Button>\r\n          </CardContent>\r\n        </Card>\r\n\r\n      <Hidden only={['sm','md','lg']}>\r\n      <div className={classes.root}>\r\n        <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n          {steps.map((label, index) => (\r\n            <Step key={label}>\r\n              <StepLabel>{label}</StepLabel>\r\n              <StepContent>\r\n                <Typography>{getStepContent(index)}</Typography>\r\n                <div className={classes.actionsContainer}>\r\n                  <div>\r\n                    \r\n                  \r\n                    <Button\r\n                      disabled={activeStep === 0}\r\n                      onClick={handleBack}\r\n                      className={classes.button}\r\n                    >\r\n                      Back\r\n                  </Button>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={handleNext}\r\n                      className={classes.button}\r\n                    >\r\n                      {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </StepContent>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n        {activeStep === steps.length && (\r\n          <Paper square elevation={0} className={classes.resetContainer}>\r\n            <Typography>All steps completed - you&apos;re finished</Typography>\r\n            <Button onClick={handleReset} className={classes.button}>\r\n              Reset\r\n          </Button>\r\n          </Paper>\r\n          \r\n        )}\r\n      </div>\r\n      </Hidden>\r\n    </div>\r\n    \r\n\r\n  );\r\n}\r\n\r\nexport default AddSnippet;","import React, { useEffect, useState, useContext } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { AppBar,Badge,Toolbar, List, Typography, Divider, IconButton, ListItem, Tooltip } from '@material-ui/core';\r\nimport { TreeItem, TreeView } from '@material-ui/lab'\r\n\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport Brightness6Icon from '@material-ui/icons/Brightness6';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nimport SnippetCard from './Snippet'\r\nimport ProfileMenu from './ProfileMenu'\r\nimport ProfileSetting from './ProfileSetting';\r\n\r\nimport axios from 'axios';\r\nimport { CompAddedContext } from './GlobalState';\r\nimport { UserContext } from './GlobalState';\r\nimport AddSnippet from './AddSnippet';\r\n\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\nfunction ScrollTop(props) {\r\n  const { children, window } = props;\r\n  const classes = useStyles();\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({\r\n    target: window ? window() : undefined,\r\n    disableHysteresis: true,\r\n    threshold: 100,\r\n  });\r\n\r\n  const handleClick = (event) => {\r\n    const anchor = (event.target.ownerDocument || document).querySelector('#back-to-top-anchor');\r\n\r\n    if (anchor) {\r\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Zoom in={trigger}>\r\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\r\n        {children}\r\n      </div>\r\n    </Zoom>\r\n  );\r\n}\r\n\r\nScrollTop.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\nexport default function PersistentDrawerLeft(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(true);\r\n  const [expanded, setExpanded] = React.useState([]);\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [postname, setPostname] = useState({ \"category\": \"\", \"name\": \"\" })\r\n  const [components, setComponents] = useState([])\r\n  const [methods, setMethods] = useState([])\r\n  const [newPost] = useContext(CompAddedContext)\r\n  const [user, setUser] = useContext(UserContext)\r\nconst [currentBodyComponent,setBody]=useState('snippet')\r\n\r\n\r\n\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleToggle = (event, nodeIds) => {\r\n    setExpanded(nodeIds);\r\n  };\r\n\r\n  const handleSelect = (event, nodeIds) => {\r\n    setSelected(nodeIds);\r\n  };\r\n  const openComponent = (e) => {\r\n    setPostname({ \"category\": \"Frontend\", \"name\": e.target.innerText })\r\n    setBody('snippet')\r\n  }\r\n  const openPost = (e) => {\r\n    setPostname({ \"category\": \"Backend\", \"name\": e.target.innerText })\r\n    setBody('snippet')\r\n  }\r\n  const openStarter = (e) => {\r\n    setPostname({ \"category\": \"\", \"name\": \"\" })\r\n    setBody('snippet')\r\n  }\r\nconst openProfileSetting=(e)=>{\r\n  setBody('profileSetting')\r\n  \r\n}\r\nconst openaddPost=()=>{\r\n  setBody('post')\r\n}\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    axios.get('https://ssautomation.accenture.com/reactapi/api/codehub')\r\n      .then(response => {\r\n        const datas = JSON.parse(response.data)\r\n\r\n        if (datas.NewDataSet.Table.length === undefined) {\r\n\r\n          setComponents(`[${datas.NewDataSet.Table.component}] `)\r\n          setMethods(`[${datas.NewDataSet.Table.methods}] `)\r\n\r\n        }\r\n        else {\r\n          let tempcomponents = []\r\n          let tempMethods = []\r\n\r\n          datas.NewDataSet.Table.map(row => {\r\n            if (row.component != null) {\r\n              if (!tempcomponents.includes(row.component)) {\r\n                tempcomponents.push(row.component);\r\n              }\r\n            }\r\n            if (row.method != null) {\r\n              if (!tempMethods.includes(row.method)) {\r\n                tempMethods.push(row.method);\r\n              }\r\n\r\n            }\r\n\r\n          });\r\n\r\n          setComponents(tempcomponents.sort())\r\n          setMethods(tempMethods.sort())\r\n\r\n        }\r\n\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n\r\n  }, [newPost]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap style={{ flex: 1 }}>\r\n            CodeHub <BugReportIcon style={{ paddingTop: 6, fontSize: 24 }} />\r\n          </Typography>\r\n          <Tooltip title=\"Add new junk\" arrow={true}>\r\n            <Link className=\"nav-link\" onClick={openaddPost}><PostAddIcon style={{ fontSize: 28 }} /></Link>\r\n          </Tooltip>\r\n          <Tooltip title=\"Notifications\" arrow={true}>\r\n          <Badge color=\"secondary\"\r\n  anchorOrigin={{\r\n    vertical: 'top',\r\n    horizontal: 'right',\r\n  }} badgeContent={0} showZero\r\n>\r\n            <Link className=\"nav-link\" to=\"/\"><NotificationsIcon style={{ fontSize: 28 }} /></Link>\r\n            </Badge>\r\n          </Tooltip>\r\n          \r\n          <Tooltip title=\"Change Theme\" arrow={true}>\r\n            <Link className=\"nav-link\" to=\"/\"><Brightness6Icon style={{ fontSize: 28 }} /></Link>\r\n          </Tooltip>\r\n\r\n<div className=\"ml-1\">\r\n<ProfileMenu onClick={openProfileSetting} />\r\n</div>\r\n          \r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}><h2>accenture</h2>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List onClick={openStarter}>\r\n          <ListItem>\r\n            <Typography>Getting Started</Typography>\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <ListItem>\r\n          <TreeView\r\n            className={classes.root}\r\n            defaultCollapseIcon={<ExpandMoreIcon />}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n            expanded={expanded}\r\n            selected={selected}\r\n            onNodeToggle={handleToggle}\r\n            onNodeSelect={handleSelect}\r\n          >\r\n            <TreeItem style={{ width: 200 }} nodeId=\"1\" label=\"Design\">\r\n              <List>\r\n\r\n                {components.map(component => (\r\n\r\n                  <ListItem style={{ width: 180 }} onClick={openComponent} button key={component}>\r\n                    <TreeItem label={component} />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </TreeItem>\r\n\r\n          </TreeView>\r\n        </ListItem>\r\n\r\n        <Divider />\r\n        <ListItem>\r\n          <TreeView\r\n            className={classes.root}\r\n            defaultCollapseIcon={<ExpandMoreIcon />}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n            expanded={expanded}\r\n            selected={selected}\r\n            onNodeToggle={handleToggle}\r\n            onNodeSelect={handleSelect}\r\n          >\r\n            <TreeItem style={{ width: 200 }} nodeId=\"6\" label=\"Coding\">\r\n              <List>\r\n\r\n                {methods.map(method => (\r\n                  <ListItem onClick={openPost} button key={method}>\r\n                    <TreeItem label={method} />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </TreeItem>\r\n\r\n          </TreeView>\r\n        </ListItem>\r\n        <Divider />\r\n        <div className=\"nav-version\">\r\n\r\n\r\n          <ListItem>\r\n            <Typography>Version (&beta; 1.0)</Typography>\r\n          </ListItem>\r\n\r\n        </div>\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        <p id=\"back-to-top-anchor\"></p>\r\n        {currentBodyComponent==='post'?<AddSnippet />:currentBodyComponent==='profileSetting'?<ProfileSetting />\r\n        :<SnippetCard post={postname} />}\r\n        \r\n        <ScrollTop {...props}>\r\n          <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\r\n            <KeyboardArrowUpIcon />\r\n          </Fab>\r\n        </ScrollTop>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport { UserContext } from './GlobalState'\r\n\r\nimport { Grid, TextField } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport PersistentDrawerLeft from './Sidenav';\r\n\r\nfunction Login() {\r\n\r\n    const [user, setUser] = useContext(UserContext)\r\n    \r\n    const [alert,setAlert]=useState({severity:'',label:'',active:false})\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n\r\n            flexWrap: 'wrap',\r\n        },\r\n        margin: {\r\n            marginTop:theme.spacing(1) ,\r\n        },\r\n        withoutLabel: {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n        textField: {\r\n            width: '80%',\r\n        },   \r\n        alert:{\r\n            width: '75%',\r\nmarginTop:theme.spacing(1),\r\nmarginBottom:theme.spacing(1)\r\n       }     \r\n    }));\r\n\r\n    const submitHandler = () => {\r\n\r\n        var url = 'https://ssautomation.accenture.com/reactapi/api/login?uname=' + values.name + '&password=' + values.password\r\n        axios.get(url)\r\n            .then((response) => {\r\n                const datas = JSON.parse(response.data)\r\n                if (datas.NewDataSet.Table.username) {\r\n                    setAlert({alert:true,severity:\"success\",label:\"Logged in Successfully\"})\r\n\r\n                    setUser({isLoggedin:true,id:datas.NewDataSet.Table.id,uname:values.name,password:values.password,user_img:datas.NewDataSet.Table.user_img})                    \r\n                }\r\n            })\r\n            .catch(error => {\r\n                setAlert({alert:true,severity:\"error\",label:\"Check Details Bro... :) \"})\r\n            })\r\n    }\r\n\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        id:'',\r\n        name: '',\r\n        password: '',\r\n        showPassword: false,\r\n    });\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n\r\n        <div>\r\n            {user.isLoggedin ? <PersistentDrawerLeft />: (\r\n                <Grid container>\r\n                    <Grid item md={6}>\r\n                        \r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                        \r\n                    {alert?<><Alert className={clsx(classes.alert)} severity={alert.severity}>{alert.label}</Alert></>:<></>}\r\n                        <h1>Login</h1>\r\n                        \r\n                        <TextField className={clsx(classes.marginTop, classes.textField)}\r\n                            id=\"outlined-required\"\r\n                            label=\"User Name\"\r\n                            defaultValue=''\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange('name')}\r\n                        />\r\n                        <br />\r\n                        <br />\r\n                        <FormControl className={clsx(classes.marginTop, classes.textField)} variant=\"outlined\">\r\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password\"\r\n                                type={values.showPassword ? 'text' : 'password'}\r\n                                \r\n                                defaultValue=''\r\n                                onChange={handleChange('password')}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                labelWidth={70}\r\n                            />\r\n                        </FormControl>\r\n                        \r\n                       <br />\r\n                       <br />\r\n                            \r\n                        \r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            onClick={submitHandler}\r\n                        >Login</Button>\r\n\r\n                        <p>Dont have Account? <Link to=\"/Signup\">Signup</Link> Here</p>\r\n                        \r\n                    </Grid>\r\n                </Grid>)}\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Login;","import React,{useContext} from 'react';\r\n\r\nimport {UserContext} from './GlobalState'\r\n\r\nimport PersistentDrawerLeft from './Sidenav'\r\nimport Login from './Login';\r\n\r\n\r\n\r\n\r\nfunction MasterPage() {\r\n    const [user,setUser]=useContext(UserContext)\r\n    return (\r\n        <div>                     \r\n            {user.isLoggedin?<><PersistentDrawerLeft /></>:<Login />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MasterPage;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../App.css';\r\nimport axios from 'axios';\r\n\r\nimport { Grid, TextField } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\n\r\nfunction Signup() {\r\n\r\n    const [alert,setAlert]=useState({severity:'',label:'',active:false})\r\n    \r\n    const addUser = () => {\r\n        const data = {\r\n            uname: values.name,\r\n            password: values.password,\r\n            user_img: values.userprofile,\r\n\r\n        }\r\n        const options = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        axios.post('https://ssautomation.accenture.com/reactapi/api/login', data, options)\r\n            .then((response) => {\r\n                console.log(response)\r\n                setAlert({severity:'success',label:'We Added you...Happy Hacking...',active:true})\r\n            })\r\n            .catch(error => {\r\n                setAlert({severity:'error',label:'Cant add you dood... :)',active:true})\r\n            })\r\n    }\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n\r\n            flexWrap: 'wrap',\r\n        },\r\n        margin: {\r\n            marginTop: theme.spacing(1),\r\n        },\r\n        withoutLabel: {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n        textField: {\r\n            width: '80%',\r\n        },\r\n        alert: {\r\n            width: '75%',\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1)\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        name: '',\r\n        password: '',\r\n        showPassword: false,\r\n        userprofile:''\r\n    });\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        if(prop==='userprofile'){\r\n            var file = event.target.files[0];\r\n            var reader = new FileReader();\r\n    \r\n            reader.onloadend = function () {                \r\n                setValues({ ...values, [prop]: reader.result });\r\n                /******************* for Binary ***********************/\r\n                // var data = (reader.result).split(',')[1];\r\n                //  binarydata = atob(data);\r\n                // console.log('Encoded Binary File String:', binarydata);\r\n            }\r\n            reader.readAsDataURL(file);\r\n    \r\n        }\r\n        else{\r\n        setValues({ ...values, [prop]: event.target.value });\r\n        }\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n\r\n    return (\r\n        <form className=\"add-user\" autoComplete=\"off\" >\r\n            <Grid container>\r\n                <Grid item md={6}>\r\n\r\n                </Grid>\r\n                <Grid item md={6}>\r\n\r\n                    {alert ? <><Alert className={clsx(classes.alert)} severity={alert.severity}>{alert.label}</Alert></> : <></>}\r\n                    <h1>Signup</h1>\r\n\r\n                    <TextField className={clsx(classes.marginTop, classes.textField)}\r\n                        id=\"outlined-required\"\r\n                        label=\"User Name\"\r\n                        defaultValue=''\r\n                        variant=\"outlined\"\r\n                        required\r\n                        onChange={handleChange('name')}\r\n                    />\r\n                    <br />\r\n                    <br />\r\n                    <FormControl className={clsx(classes.marginTop, classes.textField)} variant=\"outlined\">\r\n                        <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-password\"\r\n                            type={values.showPassword ? 'text' : 'password'}\r\n\r\n                            defaultValue=''\r\n                            onChange={handleChange('password')}\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                        edge=\"end\"\r\n                                    >\r\n                                        {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                            labelWidth={70}\r\n                        />\r\n                    </FormControl>\r\n                    <br />\r\n                    <br />\r\n                    <input key=\"userimg\" type=\"file\" onChange={handleChange('userprofile')} />\r\n                    <br />\r\n                    <br />\r\n\r\n\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        onClick={addUser}\r\n                    >SignUp</Button>\r\n\r\n                    <p>Already have an Account? <Link to=\"/Login\">Login</Link> Here</p>\r\n\r\n                </Grid>\r\n            </Grid>\r\n\r\n\r\n        </form>\r\n\r\n    );\r\n}\r\n\r\nexport default Signup;","import React, { useContext } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport './App.css';\n\nimport GlobalState from './components/GlobalState'\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nimport MasterPage from './components/MasterPage';\nimport AddSnippet from './components/AddSnippet';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light',\n\n\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold: 3,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n  },\n});\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <br />\n      <ThemeProvider theme={theme}>\n\n        <GlobalState>\n          <Router basename={'/BGC_Api'}>            \n\n            <Switch>\n              <Route exact strict path=\"/\">\n              <MasterPage />\n              </Route>\n              \n              <Route exact strict path=\"/Signup\">\n                <Signup />\n              </Route>    \n              <Route exact strict path=\"/Login\">\n                <Login />\n              </Route>              \n              <Route path=\"*\" component={Error} />\n          </Switch>\n        </Router>\n        </GlobalState>\n      </ThemeProvider>\n    </div>\n  );\n}\nconst Error = ({ location }) => (\n  <div>\n    <h3>We cant find this path <code className=\"path\">{location.pathname}</code> Bro.Check the Url</h3>\n  </div>\n)\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}